#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# Autogenerated by Thrift Compiler (0.13.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py:coding=UTF-8
#

import sys
import pprint
if sys.version_info[0] > 2:
    from urllib.parse import urlparse
else:
    from urlparse import urlparse
from thrift.transport import TTransport, TSocket, TSSLSocket, THttpClient
from thrift.protocol.TBinaryProtocol import TBinaryProtocol

from ncEtssMgmSvc import ncEtssMgmSvc
from ncEtssMgmSvc.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
    print('')
    print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] [-novalidate] [-ca_certs certs] [-keyfile keyfile] [-certfile certfile] function [arg1 [arg2...]]')
    print('')
    print('Functions:')
    print('  ncGNSObjectInfoSet GetSubObjectSet(ncGNSObjectRequest request)')
    print('  ncTapeCIDObjectInfoSet GetCIDObjectSet(ncCIDObjectRequest request, string gnsPath, string userName)')
    print('  ncTimepointInfoSet GetTimepointSet(ncTimepointRequest request)')
    print('  void DelCIDObjectData(ncGNSObjectRequest request)')
    print('  void FormatTape(string barcode)')
    print('   GetTpTapeInfo(string tpGns)')
    print('  void SetVolumeInfo(ncEtssVolumeInfo volumeInfo)')
    print('  ncEtssVolumeInfo GetVolumeInfo()')
    print('  ncGNSObjectInfoSet GetGNSObjectSet(ncGNSObjectSetRequest request)')
    print('  bool CheckVolumeIsEmpty()')
    print('  TapeImportStatus ImportMetaTape(string tapeLibSerialNo,  tapes)')
    print('  TapeImportStatus GetTapeImportStatus()')
    print('  ncTimepointInfoSet GetBatchTimePointSet(string gns,  tpList)')
    print('')
    sys.exit(0)

pp = pprint.PrettyPrinter(indent=2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
validate = True
ca_certs = None
keyfile = None
certfile = None
http = False
argi = 1

if sys.argv[argi] == '-h':
    parts = sys.argv[argi + 1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    argi += 2

if sys.argv[argi] == '-u':
    url = urlparse(sys.argv[argi + 1])
    parts = url[1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    else:
        port = 80
    uri = url[2]
    if url[4]:
        uri += '?%s' % url[4]
    http = True
    argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
    framed = True
    argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
    ssl = True
    argi += 1

if sys.argv[argi] == '-novalidate':
    validate = False
    argi += 1

if sys.argv[argi] == '-ca_certs':
    ca_certs = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-keyfile':
    keyfile = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-certfile':
    certfile = sys.argv[argi+1]
    argi += 2

cmd = sys.argv[argi]
args = sys.argv[argi + 1:]

if http:
    transport = THttpClient.THttpClient(host, port, uri)
else:
    if ssl:
        socket = TSSLSocket.TSSLSocket(host, port, validate=validate, ca_certs=ca_certs, keyfile=keyfile, certfile=certfile)
    else:
        socket = TSocket.TSocket(host, port)
    if framed:
        transport = TTransport.TFramedTransport(socket)
    else:
        transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol(transport)
client = ncEtssMgmSvc.Client(protocol)
transport.open()

if cmd == 'GetSubObjectSet':
    if len(args) != 1:
        print('GetSubObjectSet requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetSubObjectSet(eval(args[0]),))

elif cmd == 'GetCIDObjectSet':
    if len(args) != 3:
        print('GetCIDObjectSet requires 3 args')
        sys.exit(1)
    pp.pprint(client.GetCIDObjectSet(eval(args[0]), args[1], args[2],))

elif cmd == 'GetTimepointSet':
    if len(args) != 1:
        print('GetTimepointSet requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetTimepointSet(eval(args[0]),))

elif cmd == 'DelCIDObjectData':
    if len(args) != 1:
        print('DelCIDObjectData requires 1 args')
        sys.exit(1)
    pp.pprint(client.DelCIDObjectData(eval(args[0]),))

elif cmd == 'FormatTape':
    if len(args) != 1:
        print('FormatTape requires 1 args')
        sys.exit(1)
    pp.pprint(client.FormatTape(args[0],))

elif cmd == 'GetTpTapeInfo':
    if len(args) != 1:
        print('GetTpTapeInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetTpTapeInfo(args[0],))

elif cmd == 'SetVolumeInfo':
    if len(args) != 1:
        print('SetVolumeInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetVolumeInfo(eval(args[0]),))

elif cmd == 'GetVolumeInfo':
    if len(args) != 0:
        print('GetVolumeInfo requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetVolumeInfo())

elif cmd == 'GetGNSObjectSet':
    if len(args) != 1:
        print('GetGNSObjectSet requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetGNSObjectSet(eval(args[0]),))

elif cmd == 'CheckVolumeIsEmpty':
    if len(args) != 0:
        print('CheckVolumeIsEmpty requires 0 args')
        sys.exit(1)
    pp.pprint(client.CheckVolumeIsEmpty())

elif cmd == 'ImportMetaTape':
    if len(args) != 2:
        print('ImportMetaTape requires 2 args')
        sys.exit(1)
    pp.pprint(client.ImportMetaTape(args[0], eval(args[1]),))

elif cmd == 'GetTapeImportStatus':
    if len(args) != 0:
        print('GetTapeImportStatus requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetTapeImportStatus())

elif cmd == 'GetBatchTimePointSet':
    if len(args) != 2:
        print('GetBatchTimePointSet requires 2 args')
        sys.exit(1)
    pp.pprint(client.GetBatchTimePointSet(args[0], eval(args[1]),))

else:
    print('Unrecognized method %s' % cmd)
    sys.exit(1)

transport.close()
