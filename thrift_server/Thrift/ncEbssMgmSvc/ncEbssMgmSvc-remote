#!/usr/bin/env python
#
# -*- coding:utf-8 -*-
#
# Autogenerated by Thrift Compiler (1.0.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py:coding=utf-8,new_style,utf8strings
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import TSSLSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from ncEbssMgmSvc import ncEbssMgmSvc
from ncEbssMgmSvc.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print('')
  print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] function [arg1 [arg2...]]')
  print('')
  print('Functions:')
  print('  string ArchiveToBluRay(ncArchiveToBluRayRequest request)')
  print('  string AddBluRay(ncBluRayInfo bluRayInfo)')
  print('  void DeleteBluRay(string bluRayId, string userId)')
  print('  ncGetBluRayInfoReply GetBluRays(ncBluRayInfo bluRayInfo)')
  print('  ncCIDObjectInfoSet GetBluRayCIDObjectSet(ncBluRayCIDObjectRequest request)')
  print('  ncTimepointInfoSet GetTimepointSet(ncTimepointRequest request)')
  print('  ncGNSObjectInfoSet GetSubObjectSet(ncGNSObjectRequest request)')
  print('  void SetVolumeInfo(ncEbssVolumeInfo volumeInfo)')
  print('  ncEbssVolumeInfo GetVolumeInfo()')
  print('  bool CheckVolumeIsEmpty()')
  print('')
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
  ssl = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSSLSocket.TSSLSocket(host, port, validate=False) if ssl else TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = ncEbssMgmSvc.Client(protocol)
transport.open()

if cmd == 'ArchiveToBluRay':
  if len(args) != 1:
    print('ArchiveToBluRay requires 1 args')
    sys.exit(1)
  pp.pprint(client.ArchiveToBluRay(eval(args[0]),))

elif cmd == 'AddBluRay':
  if len(args) != 1:
    print('AddBluRay requires 1 args')
    sys.exit(1)
  pp.pprint(client.AddBluRay(eval(args[0]),))

elif cmd == 'DeleteBluRay':
  if len(args) != 2:
    print('DeleteBluRay requires 2 args')
    sys.exit(1)
  pp.pprint(client.DeleteBluRay(args[0],args[1],))

elif cmd == 'GetBluRays':
  if len(args) != 1:
    print('GetBluRays requires 1 args')
    sys.exit(1)
  pp.pprint(client.GetBluRays(eval(args[0]),))

elif cmd == 'GetBluRayCIDObjectSet':
  if len(args) != 1:
    print('GetBluRayCIDObjectSet requires 1 args')
    sys.exit(1)
  pp.pprint(client.GetBluRayCIDObjectSet(eval(args[0]),))

elif cmd == 'GetTimepointSet':
  if len(args) != 1:
    print('GetTimepointSet requires 1 args')
    sys.exit(1)
  pp.pprint(client.GetTimepointSet(eval(args[0]),))

elif cmd == 'GetSubObjectSet':
  if len(args) != 1:
    print('GetSubObjectSet requires 1 args')
    sys.exit(1)
  pp.pprint(client.GetSubObjectSet(eval(args[0]),))

elif cmd == 'SetVolumeInfo':
  if len(args) != 1:
    print('SetVolumeInfo requires 1 args')
    sys.exit(1)
  pp.pprint(client.SetVolumeInfo(eval(args[0]),))

elif cmd == 'GetVolumeInfo':
  if len(args) != 0:
    print('GetVolumeInfo requires 0 args')
    sys.exit(1)
  pp.pprint(client.GetVolumeInfo())

elif cmd == 'CheckVolumeIsEmpty':
  if len(args) != 0:
    print('CheckVolumeIsEmpty requires 0 args')
    sys.exit(1)
  pp.pprint(client.CheckVolumeIsEmpty())

else:
  print('Unrecognized method %s' % cmd)
  sys.exit(1)

transport.close()
