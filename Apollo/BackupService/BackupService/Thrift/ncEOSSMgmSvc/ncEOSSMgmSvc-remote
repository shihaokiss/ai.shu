#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# Autogenerated by Thrift Compiler (0.13.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py:coding=UTF-8
#

import sys
import pprint
if sys.version_info[0] > 2:
    from urllib.parse import urlparse
else:
    from urlparse import urlparse
from thrift.transport import TTransport, TSocket, TSSLSocket, THttpClient
from thrift.protocol.TBinaryProtocol import TBinaryProtocol

from ncEOSSMgmSvc import ncEOSSMgmSvc
from ncEOSSMgmSvc.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
    print('')
    print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] [-novalidate] [-ca_certs certs] [-keyfile keyfile] [-certfile certfile] function [arg1 [arg2...]]')
    print('')
    print('Functions:')
    print('  void Microprobe()')
    print('  ncGetListenReply GetListen(ncGetListenRequest request)')
    print('  ncUpdateListenReply UpdateListen(ncUpdateListenRequest request)')
    print('  ncAddListenReply AddListen(ncAddListenRequest request)')
    print('  ncDelListenReply DelListen(ncDelListenRequest request)')
    print('  ncGetListenReply GetDataListen(ncGetListenRequest request)')
    print('  ncUpdateListenReply UpdateDataListen(ncUpdateListenRequest request)')
    print('  ncAddListenReply AddDataListen(ncAddListenRequest request)')
    print('  ncDelListenReply DelDataListen(ncDelListenRequest request)')
    print('  ncDiskInfo AddDisk(ncDiskInfo diskInfo)')
    print('  ncDiskInfo DelDisk(ncDiskInfo diskInfo)')
    print('  ncDiskInfo EditDisk(ncDiskInfo diskInfo)')
    print('  ncDiskInfo GetDiskInfo(ncDiskInfo diskInfo)')
    print('   GetDiskInfoList()')
    print('  ncStorageSpaceInfo GetStorageSpaceInfo()')
    print('  ncGNSObjectInfoSet GetGNSObjectSet(ncGNSObjectSetRequest request)')
    print('  ncGNSObjectInfoSet GetSubObjectSet(ncGNSObjectRequest request)')
    print('  ncCIDObjectInfoSetEx GetCIDObjectBatch(ncCIDBatchRequest request)')
    print('  ncCIDObjectInfoSet GetCIDObjectSet(ncCIDObjectRequest request)')
    print('  ncCIDObjectInfoSet GetCIDObjectSetEx(ncCIDObjectRequestEx request)')
    print('  ncTimepointInfoSet GetTimepointSet(ncTimepointRequest request)')
    print('  void DelCIDObjectData(ncGNSObjectRequest request)')
    print('  void DelTimepointData(ncGNSObjectRequest request)')
    print('  void DelTimepointDataBatch( requests)')
    print('  ncDeleteDataReply DelTimepointCopy(ncDeleteDataRequest request)')
    print('  ncTimepointObjectInfoReply SetTimepointAvailable(ncTimepointObjectInfoRequest request)')
    print('  ncDiskInfo AddDataDisk(ncDiskInfo diskInfo)')
    print('  ncDiskInfo DelDataDisk(ncDiskInfo diskInfo)')
    print('  ncDiskInfo EditDataDisk(ncDiskInfo diskInfo)')
    print('  ncDiskInfo GetDataDiskInfo(ncDiskInfo diskInfo)')
    print('   GetDataDiskInfoList()')
    print('  ncStorageSpaceInfo GetDataStorageSpaceInfo()')
    print('   MoveMetaDisks( diskInfos)')
    print('   MoveDataDisks( diskInfos)')
    print('   ReadMetaDiskConfig()')
    print('   ReadDataDiskConfig()')
    print('  ncDeletedJobReply DeleteJobDisplay(ncDeletedJobRequest request)')
    print('  ncDeletedJobReply RecoverJobDisplay(ncDeletedJobRequest request)')
    print('')
    sys.exit(0)

pp = pprint.PrettyPrinter(indent=2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
validate = True
ca_certs = None
keyfile = None
certfile = None
http = False
argi = 1

if sys.argv[argi] == '-h':
    parts = sys.argv[argi + 1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    argi += 2

if sys.argv[argi] == '-u':
    url = urlparse(sys.argv[argi + 1])
    parts = url[1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    else:
        port = 80
    uri = url[2]
    if url[4]:
        uri += '?%s' % url[4]
    http = True
    argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
    framed = True
    argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
    ssl = True
    argi += 1

if sys.argv[argi] == '-novalidate':
    validate = False
    argi += 1

if sys.argv[argi] == '-ca_certs':
    ca_certs = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-keyfile':
    keyfile = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-certfile':
    certfile = sys.argv[argi+1]
    argi += 2

cmd = sys.argv[argi]
args = sys.argv[argi + 1:]

if http:
    transport = THttpClient.THttpClient(host, port, uri)
else:
    if ssl:
        socket = TSSLSocket.TSSLSocket(host, port, validate=validate, ca_certs=ca_certs, keyfile=keyfile, certfile=certfile)
    else:
        socket = TSocket.TSocket(host, port)
    if framed:
        transport = TTransport.TFramedTransport(socket)
    else:
        transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol(transport)
client = ncEOSSMgmSvc.Client(protocol)
transport.open()

if cmd == 'Microprobe':
    if len(args) != 0:
        print('Microprobe requires 0 args')
        sys.exit(1)
    pp.pprint(client.Microprobe())

elif cmd == 'GetListen':
    if len(args) != 1:
        print('GetListen requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetListen(eval(args[0]),))

elif cmd == 'UpdateListen':
    if len(args) != 1:
        print('UpdateListen requires 1 args')
        sys.exit(1)
    pp.pprint(client.UpdateListen(eval(args[0]),))

elif cmd == 'AddListen':
    if len(args) != 1:
        print('AddListen requires 1 args')
        sys.exit(1)
    pp.pprint(client.AddListen(eval(args[0]),))

elif cmd == 'DelListen':
    if len(args) != 1:
        print('DelListen requires 1 args')
        sys.exit(1)
    pp.pprint(client.DelListen(eval(args[0]),))

elif cmd == 'GetDataListen':
    if len(args) != 1:
        print('GetDataListen requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetDataListen(eval(args[0]),))

elif cmd == 'UpdateDataListen':
    if len(args) != 1:
        print('UpdateDataListen requires 1 args')
        sys.exit(1)
    pp.pprint(client.UpdateDataListen(eval(args[0]),))

elif cmd == 'AddDataListen':
    if len(args) != 1:
        print('AddDataListen requires 1 args')
        sys.exit(1)
    pp.pprint(client.AddDataListen(eval(args[0]),))

elif cmd == 'DelDataListen':
    if len(args) != 1:
        print('DelDataListen requires 1 args')
        sys.exit(1)
    pp.pprint(client.DelDataListen(eval(args[0]),))

elif cmd == 'AddDisk':
    if len(args) != 1:
        print('AddDisk requires 1 args')
        sys.exit(1)
    pp.pprint(client.AddDisk(eval(args[0]),))

elif cmd == 'DelDisk':
    if len(args) != 1:
        print('DelDisk requires 1 args')
        sys.exit(1)
    pp.pprint(client.DelDisk(eval(args[0]),))

elif cmd == 'EditDisk':
    if len(args) != 1:
        print('EditDisk requires 1 args')
        sys.exit(1)
    pp.pprint(client.EditDisk(eval(args[0]),))

elif cmd == 'GetDiskInfo':
    if len(args) != 1:
        print('GetDiskInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetDiskInfo(eval(args[0]),))

elif cmd == 'GetDiskInfoList':
    if len(args) != 0:
        print('GetDiskInfoList requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetDiskInfoList())

elif cmd == 'GetStorageSpaceInfo':
    if len(args) != 0:
        print('GetStorageSpaceInfo requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetStorageSpaceInfo())

elif cmd == 'GetGNSObjectSet':
    if len(args) != 1:
        print('GetGNSObjectSet requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetGNSObjectSet(eval(args[0]),))

elif cmd == 'GetSubObjectSet':
    if len(args) != 1:
        print('GetSubObjectSet requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetSubObjectSet(eval(args[0]),))

elif cmd == 'GetCIDObjectBatch':
    if len(args) != 1:
        print('GetCIDObjectBatch requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetCIDObjectBatch(eval(args[0]),))

elif cmd == 'GetCIDObjectSet':
    if len(args) != 1:
        print('GetCIDObjectSet requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetCIDObjectSet(eval(args[0]),))

elif cmd == 'GetCIDObjectSetEx':
    if len(args) != 1:
        print('GetCIDObjectSetEx requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetCIDObjectSetEx(eval(args[0]),))

elif cmd == 'GetTimepointSet':
    if len(args) != 1:
        print('GetTimepointSet requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetTimepointSet(eval(args[0]),))

elif cmd == 'DelCIDObjectData':
    if len(args) != 1:
        print('DelCIDObjectData requires 1 args')
        sys.exit(1)
    pp.pprint(client.DelCIDObjectData(eval(args[0]),))

elif cmd == 'DelTimepointData':
    if len(args) != 1:
        print('DelTimepointData requires 1 args')
        sys.exit(1)
    pp.pprint(client.DelTimepointData(eval(args[0]),))

elif cmd == 'DelTimepointDataBatch':
    if len(args) != 1:
        print('DelTimepointDataBatch requires 1 args')
        sys.exit(1)
    pp.pprint(client.DelTimepointDataBatch(eval(args[0]),))

elif cmd == 'DelTimepointCopy':
    if len(args) != 1:
        print('DelTimepointCopy requires 1 args')
        sys.exit(1)
    pp.pprint(client.DelTimepointCopy(eval(args[0]),))

elif cmd == 'SetTimepointAvailable':
    if len(args) != 1:
        print('SetTimepointAvailable requires 1 args')
        sys.exit(1)
    pp.pprint(client.SetTimepointAvailable(eval(args[0]),))

elif cmd == 'AddDataDisk':
    if len(args) != 1:
        print('AddDataDisk requires 1 args')
        sys.exit(1)
    pp.pprint(client.AddDataDisk(eval(args[0]),))

elif cmd == 'DelDataDisk':
    if len(args) != 1:
        print('DelDataDisk requires 1 args')
        sys.exit(1)
    pp.pprint(client.DelDataDisk(eval(args[0]),))

elif cmd == 'EditDataDisk':
    if len(args) != 1:
        print('EditDataDisk requires 1 args')
        sys.exit(1)
    pp.pprint(client.EditDataDisk(eval(args[0]),))

elif cmd == 'GetDataDiskInfo':
    if len(args) != 1:
        print('GetDataDiskInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetDataDiskInfo(eval(args[0]),))

elif cmd == 'GetDataDiskInfoList':
    if len(args) != 0:
        print('GetDataDiskInfoList requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetDataDiskInfoList())

elif cmd == 'GetDataStorageSpaceInfo':
    if len(args) != 0:
        print('GetDataStorageSpaceInfo requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetDataStorageSpaceInfo())

elif cmd == 'MoveMetaDisks':
    if len(args) != 1:
        print('MoveMetaDisks requires 1 args')
        sys.exit(1)
    pp.pprint(client.MoveMetaDisks(eval(args[0]),))

elif cmd == 'MoveDataDisks':
    if len(args) != 1:
        print('MoveDataDisks requires 1 args')
        sys.exit(1)
    pp.pprint(client.MoveDataDisks(eval(args[0]),))

elif cmd == 'ReadMetaDiskConfig':
    if len(args) != 0:
        print('ReadMetaDiskConfig requires 0 args')
        sys.exit(1)
    pp.pprint(client.ReadMetaDiskConfig())

elif cmd == 'ReadDataDiskConfig':
    if len(args) != 0:
        print('ReadDataDiskConfig requires 0 args')
        sys.exit(1)
    pp.pprint(client.ReadDataDiskConfig())

elif cmd == 'DeleteJobDisplay':
    if len(args) != 1:
        print('DeleteJobDisplay requires 1 args')
        sys.exit(1)
    pp.pprint(client.DeleteJobDisplay(eval(args[0]),))

elif cmd == 'RecoverJobDisplay':
    if len(args) != 1:
        print('RecoverJobDisplay requires 1 args')
        sys.exit(1)
    pp.pprint(client.RecoverJobDisplay(eval(args[0]),))

else:
    print('Unrecognized method %s' % cmd)
    sys.exit(1)

transport.close()
